<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyCostMapper">

	<resultMap type="HyCost" id="HyCostResult">
		<result property="id" column="id" />
		<result property="houseNum" column="house_num" />
		<result property="costItems" column="cost_items" />
		<result property="expenseType" column="expense_type" />
		<result property="parentId" column="parent_id" />
		<result property="ancestors" column="ancestors" />
		<result property="standardName" column="standard_name" />
		<result property="feeNum" column="fee_num" />
		<result property="chargingStandard" column="charging_standard" />
		<result property="calculationMehod" column="calculation_mehod" />
		<result property="standardDescription"
			column="standard_description" />
		<result property="standardState" column="standard_state" />
		<result property="proportionDamags" column="proportion_damags" />
		<result property="projectModification"
			column="project_modification" />
		<result property="billingCycle" column="billing_cycle" />
		<result property="bilingStartDate" column="biling_start_date" />
		<result property="bilingEndDate" column="biling_end_date" />
		<result property="auditResultsReason"
			column="audit_results_reason" />
		<result property="feeDateOld" column="fee_date_old" />
		<result property="feeDate" column="fee_date" />
		<result property="dueDateOld" column="due_date_old" />
		<result property="dueDate" column="due_date" />
		<result property="amountReceivableOld"
			column="amount_receivable_old" />
		<result property="amountReceivable" column="amount_receivable" />
		<result property="amountActually" column="amount_actually" />
		<result property="remarks" column="remarks" />
		<result property="operationDate" column="operation_date" />
		<result property="operationUser" column="operation_user" />
		<result property="operationType" column="operation_type" />
		<result property="deleteReason" column="delete_reason" />
		<result property="advancePaymentOffset"
			column="advance_payment_offset" />
		<result property="writeOff" column="write_off" />
		<result property="refundAmount" column="refund_amount" />
		<result property="amountArrears" column="amount_arrears" />
		<result property="collectionStatus" column="collection_status" />
		<result property="frozenPerson" column="frozen_person" />
		<result property="frozenState" column="frozen_state" />
		<result property="frozenDate" column="frozen_date" />
		<result property="frozenReason" column="frozen_reason" />
		<result property="advanceStatus" column="advance_status" />
		<result property="deliveryStatus" column="delivery_status" />
		<result property="transferTenants" column="transfer_tenants" />
		<result property="changeDate" column="change_date" />
		<result property="billingMethod" column="billing_method" />
		<result property="calculationStandard"
			column="calculation_standard" />
	</resultMap>


	<sql id="selectHyCostVo">
		SELECT
		c.id,
		c.cost_items,
		c.expense_type,
		c.parent_id,
		c.ancestors,
		c.standard_name,
		c.advance_payment_offset,
		c.charging_standard,
		c.calculation_mehod,
		c.standard_description,
		c.standard_state,
		c.proportion_damags,
		c.project_modification,
		c.biling_start_date,
		c.biling_end_date,
		c.audit_results_reason,
		c.house_num,
		c.fee_date_old,
		c.fee_date,
		c.due_date_old,
		c.due_date,
		c.amount_receivable_old,
		c.amount_receivable,
		c.amount_actually,
		c.remarks,
		c.operation_date,
		c.operation_user,
		c.operation_type,
		c.delete_reason,
		c.advance_payment_offset,
		c.write_off,
		c.refund_amount,
		c.amount_arrears,
		c.collection_status,
		c.frozen_person,
		c.frozen_state,
		c.frozen_date,
		c.frozen_reason,
		c.advance_status,
		c.delivery_status,
		c.billing_cycle,
		c.transfer_tenants,
		c.change_date,
		c.billing_method,
		c.calculation_standard
		FROM
		hy_cost c
		WHERE
		1 = 1
	</sql>

	<sql id="selectHyCostDistinctVo">
		SELECT
		DISTINCT c.cost_items,c.id
		FROM
		hy_cost c
		WHERE
		1=1
	</sql>

	<select id="selectHyCostList" parameterType="HyCost"
		resultMap="HyCostResult">
		<include refid="selectHyCostVo" />
		<if test="costItems != null  and costItems != ''"> and c.cost_items = #{costItems}</if>
		<if test="expenseType != null  and expenseType != ''"> and c.expense_type = #{expenseType}</if>
		<if test="operationDate != null">and c.operation_date = #{operationDate}</if>
		<if test="operationUser != null and operationUser!=''">and c.operation_user = #{operationUser}</if>
		<if test="houseNum != null and houseNum !=''">and c.house_num = #{houseNum}</if>
		<if test="standardName != null and standardName !=''">and c.standard_name = #{standardName}</if>
		<if test="chargingStandard != null and chargingStandard !=''">and c.charging_standard = #{chargingStandard}</if>
		<if test="billingCycle != null and billingCycle !=''">and c.billing_cycle = #{billingCycle}</if>
		<if test="calculationMehod != null and calculationMehod !=''">and c.calculation_mehod = #{calculationMehod}</if>
		<if test="standardDescription != null and standardDescription !=''">and c.standard_description = #{standardDescription}</if>
		<if test="bilingStartDate != null ">and c.biling_start_date = #{bilingStartDate}</if>
		<if test="transferTenants != null ">and c.transfer_tenants = #{transferTenants}</if>
		<if test="changeDate != null ">and c.change_date = #{changeDate}</if>
		<if test="feeDate != null ">and c.fee_date = #{feeDate}</if>
		<if test="dueDate != null ">and c.due_date = #{dueDate}</if>
		<if test="bilingStartDate != null ">and c.biling_start_date = #{bilingStartDate}</if>
		<if test="bilingEndDate != null ">and c.biling_end_date = #{bilingEndDate}</if>
	</select>
	
	<select id="selectHyCostListDistinct" parameterType="HyCost"
		resultMap="HyCostResult">
		<include refid="selectHyCostDistinctVo" />
		<if test="costItems != null  and costItems != ''"> and cost_items = #{costItems}</if>
		<if test="expenseType != null  and expenseType != ''"> and expense_type = #{expenseType}</if>
	</select>

	<select id="selectHyCostById" parameterType="Long"
		resultMap="HyCostResult">
		<include refid="selectHyCostVo" />
		and c.id = #{id}
	</select>

	<insert id="insertHyCost" parameterType="HyCost"
		useGeneratedKeys="true" keyProperty="id">
		insert into hy_cost
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="costItems != null and costItems!='' ">cost_items,</if>
			<if test="houseNum != null  ">house_num,</if>
			<if test="expenseType != null and expenseType!='' ">expense_type,</if>
			<if test="billingCycle != null  ">billing_cycle,</if>
			<if test="billingMethod != null  ">billing_method,</if>
			<if test="standardName != null  ">standard_name,</if>
			<if test="bilingStartDate != null ">biling_start_date,</if>
			<if test="transferTenants != null and transferTenants !='' ">transfer_tenants,</if>
			<if test="writeOff != null and writeOff !='' ">write_off,</if>

			<if test="feeDateOld != null  ">fee_date_old,</if>
			<if test="bilingEndDate != null ">biling_end_date,</if>
			<if test="amountReceivable != null and amountReceivable !='' ">amount_receivable,</if>
			<if test="amountActually != null and amountActually !='' ">amount_actually,</if>
			<if
				test="advancePaymentOffset != null and advancePaymentOffset !='' ">advance_payment_offset,</if>
			<if test="refundAmount != null and refundAmount !='' ">refund_amount,</if>
			<if test="amountArrears != null and amountArrears !='' ">amount_arrears,</if>
			<if test="collectionStatus != null and collectionStatus !='' ">collection_status,</if>
			<if test="frozenState != null and frozenState !='' ">frozen_state,</if>
			<if test="advanceStatus != null and advanceStatus !='' ">advance_status,</if>
			<if test="deliveryStatus != null and deliveryStatus !='' ">delivery_status,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="costItems != null and costItems!='' ">#{costItems},</if>
			<if test="houseNum != null  ">#{houseNum},</if>
			<if test="expenseType != null and expenseType!='' ">#{expenseType},</if>
			<if test="billingCycle != null ">#{billingCycle},</if>
			<if test="billingMethod != null ">#{billingMethod},</if>
			<if test="standardName != null ">#{standardName},</if>
			<if test="bilingStartDate != null ">#{bilingStartDate},</if>
			<if test="transferTenants != null and transferTenants !='' ">#{transferTenants},</if>
			<if test="writeOff != null and writeOff !='' ">#{writeOff},</if>

			<if test="feeDateOld != null  ">#{feeDateOld},</if>
			<if test="bilingEndDate != null ">#{bilingEndDate},</if>
			<if test="amountReceivable != null and amountReceivable !='' ">#{amountReceivable},</if>
			<if test="amountActually != null and amountActually !='' ">#{amountActually},</if>
			<if
				test="advancePaymentOffset != null and advancePaymentOffset !='' ">#{advancePaymentOffset},</if>
			<if test="refundAmount != null and refundAmount !='' ">#{refundAmount},</if>
			<if test="amountArrears != null and amountArrears !='' ">#{amountArrears},</if>
			<if test="collectionStatus != null and collectionStatus !='' ">#{collectionStatus},</if>
			<if test="frozenState != null and frozenState !='' ">#{frozenState},</if>
			<if test="advanceStatus != null and advanceStatus !='' ">#{advanceStatus},</if>
			<if test="deliveryStatus != null and deliveryStatus !='' ">#{deliveryStatus},</if>
		</trim>
	</insert>

	<update id="updateHyCost" parameterType="HyCost">
		update hy_cost
		<trim prefix="SET" suffixOverrides=",">
			<if test="costItems != null">cost_items = #{costItems},</if>
			<if test="expenseType != null">expense_type = #{expenseType},</if>
			<if test="houseNum != null  ">house_num = #{houseNum},</if>
			<if test="billingCycle != null ">billing_cycle=#{billingCycle},</if>
			<if test="billingMethod != null ">billing_method=#{billingMethod},</if>
			<if test="standardName != null ">standard_name=#{standardName},</if>
			<if test="bilingStartDate != null ">biling_start_date=#{bilingStartDate},</if>
			<if test="transferTenants != null and transferTenants !='' ">transfer_tenants=#{transferTenants},</if>
		</trim>
		where id = #{id}
	</update>

	<delete id="deleteHyCostById" parameterType="Long">
		delete from hy_cost
		and id = #{id}
	</delete>

	<delete id="deleteHyCostByIds" parameterType="String">
		delete from hy_cost where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

</mapper>