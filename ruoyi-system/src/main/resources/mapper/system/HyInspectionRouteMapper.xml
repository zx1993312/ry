<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyInspectionRouteMapper">
    
    <resultMap type="HyInspectionRoute" id="HyInspectionRouteResult">
        <result property="id"    column="id"    />
        <result property="routeName"    column="route_name"    />
        <result property="type"    column="type"    />
        <result property="remark"    column="remark"    />
        <result property="schemeId"    column="scheme_id"    />
        <result property="deptId"    column="dept_id"    />
        <association property="sysDept" column="id"
			javaType="SysDept" resultMap="SysDeptResult" />
    </resultMap>
	
	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
	</resultMap>
	
    <sql id="selectHyInspectionRouteVo">
        select 
        i.id, 
        i.route_name, 
        i.type, 
        i.remark, 
        i.scheme_id, 
        i.dept_id,
        d.dept_name 
        from 
        hy_inspection_route i
        LEFT JOIN sys_dept d ON i.dept_id = d.dept_id
    </sql>

    <select id="selectHyInspectionRouteList" parameterType="HyInspectionRoute" resultMap="HyInspectionRouteResult">
        <include refid="selectHyInspectionRouteVo"/>
        <where>  
            <if test="routeName != null  and routeName != ''"> and i.route_name like concat('%', #{routeName}, '%')</if>
            <if test="type != null  and type != ''"> and i.type = #{type}</if>
            <if test="schemeId != null "> and i.scheme_id = #{schemeId}</if>
            <if test="deptId != null "> and i.dept_id = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectHyInspectionRouteById" parameterType="Long" resultMap="HyInspectionRouteResult">
        <include refid="selectHyInspectionRouteVo"/>
        where i.id = #{id}
    </select>
        
    <insert id="insertHyInspectionRoute" parameterType="HyInspectionRoute" useGeneratedKeys="true" keyProperty="id">
        insert into hy_inspection_route
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="routeName != null">route_name,</if>
            <if test="type != null">type,</if>
            <if test="remark != null">remark,</if>
            <if test="schemeId != null">scheme_id,</if>
            <if test="deptId != null">dept_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="routeName != null">#{routeName},</if>
            <if test="type != null">#{type},</if>
            <if test="remark != null">#{remark},</if>
            <if test="schemeId != null">#{schemeId},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateHyInspectionRoute" parameterType="HyInspectionRoute">
        update hy_inspection_route
        <trim prefix="SET" suffixOverrides=",">
            <if test="routeName != null">route_name = #{routeName},</if>
            <if test="type != null">type = #{type},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="schemeId != null">scheme_id = #{schemeId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHyInspectionRouteById" parameterType="Long">
        delete from hy_inspection_route where id = #{id}
    </delete>

    <delete id="deleteHyInspectionRouteByIds" parameterType="String">
        delete from hy_inspection_route where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>