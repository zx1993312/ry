<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyEmployeeMapper">
    
    <resultMap type="HyEmployee" id="HyEmployeeResult">
        <result property="id"    column="id"    />
        <result property="employeeName"    column="employee_name"    />
        <result property="employeePhone"    column="employee_phone"    />
        <result property="deptId"    column="dept_id"    />
        <association property="hyDept" column="id"
			javaType="HyDept" resultMap="HyDeptResult" />
    </resultMap>

	 <resultMap type="HyDept" id="HyDeptResult">
        <result property="id"    column="id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="createTime"    column="create_time"    />
        <result property="leader"    column="leader"    />
        <result property="propertyId"    column="property_id"    />
    </resultMap>

    <sql id="selectHyEmployeeVo">
        select 
        e.id, 
        e.employee_name, 
        e.employee_phone, 
        e.dept_id,
        d.dept_name
        from 
        hy_employee e
        LEFT JOIN hy_dept d ON e.dept_id = d.id
    </sql>

    <select id="selectHyEmployeeList" parameterType="HyEmployee" resultMap="HyEmployeeResult">
        <include refid="selectHyEmployeeVo"/>
        <where>  
            <if test="employeeName != null  and employeeName != ''"> and e.employee_name like concat('%', #{employeeName}, '%')</if>
            <if test="employeePhone != null  and employeePhone != ''"> and e.employee_phone like concat('%', #{employeePhone}, '%')</if>
            <if test="deptId != null "> and e.dept_id = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectHyEmployeeById" parameterType="Long" resultMap="HyEmployeeResult">
        <include refid="selectHyEmployeeVo"/>
        where e.id = #{id}
    </select>
        
    <insert id="insertHyEmployee" parameterType="HyEmployee" useGeneratedKeys="true" keyProperty="id">
        insert into hy_employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="employeeName != null">employee_name,</if>
            <if test="employeePhone != null">employee_phone,</if>
            <if test="deptId != null">dept_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="employeeName != null">#{employeeName},</if>
            <if test="employeePhone != null">#{employeePhone},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateHyEmployee" parameterType="HyEmployee">
        update hy_employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="employeeName != null">employee_name = #{employeeName},</if>
            <if test="employeePhone != null">employee_phone = #{employeePhone},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHyEmployeeById" parameterType="Long">
        delete from hy_employee where id = #{id}
    </delete>

    <delete id="deleteHyEmployeeByIds" parameterType="String">
        delete from hy_employee where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>