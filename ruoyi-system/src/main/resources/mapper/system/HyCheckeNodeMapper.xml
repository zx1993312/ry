<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyCheckeNodeMapper">
    
    <resultMap type="HyCheckeNode" id="HyCheckeNodeResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="address"    column="address"    />
        <result property="scanCode"    column="scan_code"    />
        <result property="longitude"    column="longitude"    />
        <result property="latitude"    column="latitude"    />
        <result property="remark"    column="remark"    />
        <result property="deptId"    column="deptId"    />
    </resultMap>

    <sql id="selectHyCheckeNodeVo">
        select id, name, address, scan_code, longitude, latitude, remark, deptId from hy_checke_node
    </sql>

    <select id="selectHyCheckeNodeList" parameterType="HyCheckeNode" resultMap="HyCheckeNodeResult">
        <include refid="selectHyCheckeNodeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
            <if test="scanCode != null  and scanCode != ''"> and scan_code = #{scanCode}</if>
            <if test="longitude != null  and longitude != ''"> and longitude = #{longitude}</if>
            <if test="latitude != null  and latitude != ''"> and latitude = #{latitude}</if>
            <if test="deptId != null "> and deptId = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectHyCheckeNodeById" parameterType="Long" resultMap="HyCheckeNodeResult">
        <include refid="selectHyCheckeNodeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertHyCheckeNode" parameterType="HyCheckeNode" useGeneratedKeys="true" keyProperty="id">
        insert into hy_checke_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="address != null">address,</if>
            <if test="scanCode != null">scan_code,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="remark != null">remark,</if>
            <if test="deptId != null">deptId,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="address != null">#{address},</if>
            <if test="scanCode != null">#{scanCode},</if>
            <if test="longitude != null">#{longitude},</if>
            <if test="latitude != null">#{latitude},</if>
            <if test="remark != null">#{remark},</if>
            <if test="deptId != null">#{deptId},</if>
         </trim>
    </insert>

    <update id="updateHyCheckeNode" parameterType="HyCheckeNode">
        update hy_checke_node
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="address != null">address = #{address},</if>
            <if test="scanCode != null">scan_code = #{scanCode},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="deptId != null">deptId = #{deptId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHyCheckeNodeById" parameterType="Long">
        delete from hy_checke_node where id = #{id}
    </delete>

    <delete id="deleteHyCheckeNodeByIds" parameterType="String">
        delete from hy_checke_node where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>