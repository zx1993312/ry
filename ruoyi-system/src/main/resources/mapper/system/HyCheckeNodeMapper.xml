<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyCheckeNodeMapper">
    
    <resultMap type="HyCheckeNode" id="HyCheckeNodeResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="address"    column="address"    />
        <result property="scanCode"    column="scan_code"    />
        <result property="longitude"    column="longitude"    />
        <result property="latitude"    column="latitude"    />
        <result property="remark"    column="remark"    />
        <result property="deptId"    column="dept_id"    />
        <result property="parentId"    column="parent_id"    />
        <result property="propertyId"    column="property_id"    />
        <association property="sysDept" column="id"
			javaType="SysDept" resultMap="SysDeptResult" />
    </resultMap>
	
	<resultMap type="SysDept" id="SysDeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
	</resultMap>
	
    <sql id="selectHyCheckeNodeVo">
        select 
        n.id, 
        n.name, 
        n.address, 
        n.scan_code, 
        n.longitude, 
        n.latitude, 
        n.remark, 
        n.dept_id,
        n.parent_id,
        n.property_id,
        d.dept_name
        from 
        hy_checke_node n
        LEFT JOIN sys_dept d ON n.dept_id = d.dept_id
    </sql>

    <select id="selectHyCheckeNodeList" parameterType="HyCheckeNode" resultMap="HyCheckeNodeResult">
        <include refid="selectHyCheckeNodeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and n.name like concat('%', #{name}, '%')</if>
            <if test="address != null  and address != ''"> and n.address = #{address}</if>
            <if test="scanCode != null  and scanCode != ''"> and n.scan_code = #{scanCode}</if>
            <if test="longitude != null  and longitude != ''"> and n.longitude = #{longitude}</if>
            <if test="latitude != null  and latitude != ''"> and n.latitude = #{latitude}</if>
            <if test="deptId != null "> and n.dept_id = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectHyCheckeNodeById" parameterType="Long" resultMap="HyCheckeNodeResult">
        <include refid="selectHyCheckeNodeVo"/>
        where n.id = #{id}
    </select>
        
    <insert id="insertHyCheckeNode" parameterType="HyCheckeNode" useGeneratedKeys="true" keyProperty="id">
        insert into hy_checke_node
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="address != null">address,</if>
            <if test="scanCode != null">scan_code,</if>
            <if test="longitude != null">longitude,</if>
            <if test="latitude != null">latitude,</if>
            <if test="remark != null">remark,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="parentId != null">parent_id,</if>
            <if test="propertyId != null">property_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="address != null">#{address},</if>
            <if test="scanCode != null">#{scanCode},</if>
            <if test="longitude != null">#{longitude},</if>
            <if test="latitude != null">#{latitude},</if>
            <if test="remark != null">#{remark},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="parentId != null">#{parentId},</if>
            <if test="propertyId != null">#{propertyId},</if>
         </trim>
    </insert>

    <update id="updateHyCheckeNode" parameterType="HyCheckeNode">
        update hy_checke_node
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="address != null">address = #{address},</if>
            <if test="scanCode != null">scan_code = #{scanCode},</if>
            <if test="longitude != null">longitude = #{longitude},</if>
            <if test="latitude != null">latitude = #{latitude},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="propertyId != null">property_id = #{propertyId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHyCheckeNodeById" parameterType="Long">
        delete from hy_checke_node where id = #{id}
    </delete>

    <delete id="deleteHyCheckeNodeByIds" parameterType="String">
        delete from hy_checke_node where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>