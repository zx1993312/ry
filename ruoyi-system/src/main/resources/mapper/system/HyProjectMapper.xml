<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyProjectMapper">

	<resultMap type="HyProject" id="HyProjectResult">
		<result property="id" column="id" />
		<result property="projectName" column="project_name" />
		<result property="villageId" column="village_id" />
		<result property="parentId" column="parent_id" />
		<result property="ancestors" column="ancestors" />
		<association property="hyGroupRegistration" column="id"
			javaType="HyGroupRegistration" resultMap="HyGroupRegistrationResult" />
	</resultMap>
	
	<resultMap type="HyGroupRegistration" id="HyGroupRegistrationResult">
        <result property="id"    column="id"    />
        <result property="groupAreaName"    column="group_area_name"    />
    </resultMap>
	
	<sql id="selectHyProjectVo">
		select 
		p.id, 
		p.project_name, 
		p.village_id, 
		p.parent_id,
		p.ancestors,
		g.group_area_name 
		from 
		hy_project p
		LEFT JOIN hy_group_registration g ON p.village_id=g.id
	</sql>

	<select id="selectHyProjectList" parameterType="HyProject"
		resultMap="HyProjectResult">
		<include refid="selectHyProjectVo" />
		<where>
			<if test="projectName != null  and projectName != ''"> and p.project_name like concat('%', #{projectName}, '%')
			</if>
			<if test="villageId != null "> and p.village_id = #{villageId}</if>
		</where>
	</select>

	<select id="selectHyProjectById" parameterType="Long"
		resultMap="HyProjectResult">
		<include refid="selectHyProjectVo" />
		where p.id = #{id}
	</select>

	<insert id="insertHyProject" parameterType="HyProject">
		insert into hy_project
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="projectName != null">project_name,</if>
			<if test="villageId != null">village_id,</if>
			<if test="parentId != null">parent_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="projectName != null">#{projectName},</if>
			<if test="villageId != null">#{villageId},</if>
			<if test="parentId != null">#{parentId},</if>
		</trim>
	</insert>

	<update id="updateHyProject" parameterType="HyProject">
		update hy_project
		<trim prefix="SET" suffixOverrides=",">
			<if test="projectName != null">project_name = #{projectName},</if>
			<if test="villageId != null">village_id = #{villageId},</if>
			<if test="parentId != null">parent_id = #{parentId},</if>
		</trim>
		where id = #{id}
	</update>

	<delete id="deleteHyProjectById" parameterType="Long">
		delete from hy_project where id = #{id}
	</delete>

	<delete id="deleteHyProjectByIds" parameterType="String">
		delete from hy_project where id in
		<foreach item="id" collection="array" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

</mapper>