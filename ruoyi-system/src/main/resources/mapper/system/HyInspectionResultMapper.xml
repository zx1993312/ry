<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyInspectionResultMapper">
    
    <resultMap type="HyInspectionResult" id="HyInspectionResultResult">
        <result property="id"    column="id"    />
        <result property="resultName"    column="result_name"    />
        <result property="type"    column="type"    />
        <result property="normal"    column="normal"    />
        <result property="explains"    column="explains"    />
        <result property="schemeId"    column="scheme_id"    />
    </resultMap>

    <sql id="selectHyInspectionResultVo">
        select id, result_name, type, normal, explains, scheme_id from hy_inspection_result
    </sql>

    <select id="selectHyInspectionResultList" parameterType="HyInspectionResult" resultMap="HyInspectionResultResult">
        <include refid="selectHyInspectionResultVo"/>
        <where>  
            <if test="resultName != null  and resultName != ''"> and result_name like concat('%', #{resultName}, '%')</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="normal != null  and normal != ''"> and normal = #{normal}</if>
            <if test="explains != null  and explains != ''"> and explains = #{explains}</if>
            <if test="schemeId != null  and schemeId != ''"> and scheme_id = #{schemeId}</if>
        </where>
    </select>
    
    <select id="selectHyInspectionResultById" parameterType="Long" resultMap="HyInspectionResultResult">
        <include refid="selectHyInspectionResultVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertHyInspectionResult" parameterType="HyInspectionResult" useGeneratedKeys="true" keyProperty="id">
        insert into hy_inspection_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="resultName != null">result_name,</if>
            <if test="type != null">type,</if>
            <if test="normal != null">normal,</if>
            <if test="explains != null">explains,</if>
            <if test="schemeId != null">scheme_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="resultName != null">#{resultName},</if>
            <if test="type != null">#{type},</if>
            <if test="normal != null">#{normal},</if>
            <if test="explains != null">#{explains},</if>
            <if test="schemeId != null">#{schemeId},</if>
         </trim>
    </insert>

    <update id="updateHyInspectionResult" parameterType="HyInspectionResult">
        update hy_inspection_result
        <trim prefix="SET" suffixOverrides=",">
            <if test="resultName != null">result_name = #{resultName},</if>
            <if test="type != null">type = #{type},</if>
            <if test="normal != null">normal = #{normal},</if>
            <if test="explains != null">explains = #{explains},</if>
            <if test="schemeId != null">scheme_id = #{schemeId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHyInspectionResultById" parameterType="Long">
        delete from hy_inspection_result where id = #{id}
    </delete>

    <delete id="deleteHyInspectionResultByIds" parameterType="String">
        delete from hy_inspection_result where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>