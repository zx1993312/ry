<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.HyPropertyMapper">
    
    <resultMap type="HyProperty" id="HyPropertyResult">
        <result property="id"    column="id"    />
        <result property="propertyName"    column="property_name"    />
        <result property="propertyPhone"    column="property_phone"    />
        <result property="propertyIntroduce"    column="property_introduce"    />
        <result property="creationTime"    column="creation_time"    />
        <result property="propertyPictureAddress"    column="property_picture_address"    />
    </resultMap>

    <sql id="selectHyPropertyVo">
        select id, property_name, property_phone, property_introduce, creation_time, property_picture_address from hy_property
    </sql>

    <select id="selectHyPropertyList" parameterType="HyProperty" resultMap="HyPropertyResult">
        <include refid="selectHyPropertyVo"/>
        <where>  
            <if test="propertyName != null  and propertyName != ''"> and property_name like concat('%', #{propertyName}, '%')</if>
            <if test="propertyPhone != null "> and property_phone = #{propertyPhone}</if>
            <if test="propertyIntroduce != null  and propertyIntroduce != ''"> and property_introduce = #{propertyIntroduce}</if>
            <if test="creationTime != null "> and creation_time = #{creationTime}</if>
            <if test="propertyPictureAddress != null  and propertyPictureAddress != ''"> and property_picture_address = #{propertyPictureAddress}</if>
        </where>
    </select>
    
    <select id="selectHyPropertyById" parameterType="Long" resultMap="HyPropertyResult">
        <include refid="selectHyPropertyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertHyProperty" parameterType="HyProperty" useGeneratedKeys="true" keyProperty="id">
        insert into hy_property
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="propertyName != null">property_name,</if>
            <if test="propertyPhone != null">property_phone,</if>
            <if test="propertyIntroduce != null">property_introduce,</if>
            <if test="creationTime != null">creation_time,</if>
            <if test="propertyPictureAddress != null">property_picture_address,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="propertyName != null">#{propertyName},</if>
            <if test="propertyPhone != null">#{propertyPhone},</if>
            <if test="propertyIntroduce != null">#{propertyIntroduce},</if>
            <if test="creationTime != null">#{creationTime},</if>
            <if test="propertyPictureAddress != null">#{propertyPictureAddress},</if>
         </trim>
    </insert>

    <update id="updateHyProperty" parameterType="HyProperty">
        update hy_property
        <trim prefix="SET" suffixOverrides=",">
            <if test="propertyName != null">property_name = #{propertyName},</if>
            <if test="propertyPhone != null">property_phone = #{propertyPhone},</if>
            <if test="propertyIntroduce != null">property_introduce = #{propertyIntroduce},</if>
            <if test="creationTime != null">creation_time = #{creationTime},</if>
            <if test="propertyPictureAddress != null">property_picture_address = #{propertyPictureAddress},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteHyPropertyById" parameterType="Long">
        delete from hy_property where id = #{id}
    </delete>

    <delete id="deleteHyPropertyByIds" parameterType="String">
        delete from hy_property where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>